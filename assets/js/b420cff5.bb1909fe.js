"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2935],{15680:(e,n,a)=>{a.d(n,{xA:()=>m,yg:()=>y});var t=a(96540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),u=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},m=function(e){var n=u(e.components);return t.createElement(s.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=u(a),d=r,y=p["".concat(s,".").concat(d)]||p[d]||c[d]||o;return a?t.createElement(y,l(l({ref:n},m),{},{components:a})):t.createElement(y,l({ref:n},m))}));function y(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},19365:(e,n,a)=>{a.d(n,{A:()=>l});var t=a(96540),r=a(20053);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:a,className:l}=e;return t.createElement("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,l),hidden:a},n)}},11470:(e,n,a)=>{a.d(n,{A:()=>T});var t=a(58168),r=a(96540),o=a(20053),l=a(23104),i=a(56347),s=a(57485),u=a(31682),m=a(89466);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:r}}=e;return{value:n,label:a,attributes:t,default:r}}))}function c(e){const{values:n,children:a}=e;return(0,r.useMemo)((()=>{const e=n??p(a);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function d(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function y(e){let{queryString:n=!1,groupId:a}=e;const t=(0,i.W6)(),o=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,s.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(t.location.search);n.set(o,e),t.replace({...t.location,search:n.toString()})}),[o,t])]}function f(e){const{defaultValue:n,queryString:a=!1,groupId:t}=e,o=c(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:o}))),[s,u]=y({queryString:a,groupId:t}),[p,f]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,o]=(0,m.Dv)(a);return[t,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:t}),g=(()=>{const e=s??p;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var g=a(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:n,block:a,selectedValue:i,selectValue:s,tabValues:u}=e;const m=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.a_)(),c=e=>{const n=e.currentTarget,a=m.indexOf(n),t=u[a].value;t!==i&&(p(n),s(t))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=m.indexOf(e.currentTarget)+1;n=m[a]??m[0];break}case"ArrowLeft":{const a=m.indexOf(e.currentTarget)-1;n=m[a]??m[m.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":a},n)},u.map((e=>{let{value:n,label:a,attributes:l}=e;return r.createElement("li",(0,t.A)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>m.push(e),onKeyDown:d,onClick:c},l,{className:(0,o.A)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":i===n})}),a??n)})))}function v(e){let{lazy:n,children:a,selectedValue:t}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))))}function k(e){const n=f(e);return r.createElement("div",{className:(0,o.A)("tabs-container",b.tabList)},r.createElement(h,(0,t.A)({},e,n)),r.createElement(v,(0,t.A)({},e,n)))}function T(e){const n=(0,g.A)();return r.createElement(k,(0,t.A)({key:String(n)},e))}},86953:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>m,contentTitle:()=>s,default:()=>y,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var t=a(58168),r=(a(96540),a(15680)),o=a(11470),l=a(19365);const i={title:"Type Inference"},s="Type Inference",u={unversionedId:"schemas/type-inference/index",id:"schemas/type-inference/index",title:"Type Inference",description:"DynamoDB-Toolbox exposes several generic types to infer custom types from your schemas.",source:"@site/docs/4-schemas/5-type-inference/index.md",sourceDirName:"4-schemas/5-type-inference",slug:"/schemas/type-inference/",permalink:"/docs/schemas/type-inference/",draft:!1,tags:[],version:"current",frontMatter:{title:"Type Inference"},sidebar:"tutorialSidebar",previous:{title:"Custom Validation",permalink:"/docs/schemas/custom-validation/"},next:{title:"any",permalink:"/docs/schemas/any/"}},m={},p=[{value:"Writes",id:"writes",level:2},{value:"Reads",id:"reads",level:2}],c={toc:p},d="wrapper";function y(e){let{components:n,...a}=e;return(0,r.yg)(d,(0,t.A)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"type-inference"},"Type Inference"),(0,r.yg)("p",null,"DynamoDB-Toolbox exposes several generic types to ",(0,r.yg)("strong",{parentName:"p"},"infer custom types")," from your schemas."),(0,r.yg)("p",null,"Which one you should use depends on your usage context, for instance, whether it\u2019s within a ",(0,r.yg)("a",{parentName:"p",href:"#writes"},"write")," or a ",(0,r.yg)("a",{parentName:"p",href:"#reads"},"read")," operation."),(0,r.yg)("h2",{id:"writes"},"Writes"),(0,r.yg)("p",null,"For write operations, DynamoDB-Toolbox exposes the following generic types:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"ValidValue"),": A valid schema item"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"InputValue"),": Similar to ",(0,r.yg)("inlineCode",{parentName:"li"},"ValidValue"),", but with defaulted and linked attributes optional"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"TransformedValue"),": A valid schema item after transformation")),(0,r.yg)("mermaid",{value:'flowchart LR\n  classDef mmddescription fill:none,stroke:none\n  classDef mmdcontainer fill:#eee4,stroke-width:1px,stroke-dasharray:3,stroke:#ccc,font-weight:bold,font-size:large\n\n  InputValue["<b>InputValue</b>"]\n\n  subgraph Fill[ ]\n    FillDescription["<b>Fill</b>"]:::mmddescription\n    fillDescr(+ defaults<br/>+ links):::mmddescription\n  end\n  Fill:::mmdcontainer\n\n  ValidValue["<b>ValidValue</b>"]\n\n  InputValue.-FillDescription\n  FillDescription.->ValidValue\n\n  subgraph Transform[ ]\n    TransformDescription["<b>Transform</b>"]:::mmddescription\n    transformDescr(+ renaming<br/>+ transforms):::mmddescription\n  end\n  Transform:::mmdcontainer\n\n  TransformedValue["<b>TransformedValue</b>"]\n\n  ValidValue.-TransformDescription\n  TransformDescription.->TransformedValue\n'}),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import type {\n  InputValue,\n  ValidValue,\n  TransformedValue\n} from 'dynamodb-toolbox/entity'\n\ntype Input = InputValue<typeof pokemonSchema>\ntype Valid = ValidValue<typeof pokemonSchema>\ntype Transformed = TransformedValue<typeof pokemonSchema>\n")),(0,r.yg)("p",null,"By default, those generics use the ",(0,r.yg)("inlineCode",{parentName:"p"},"put")," write mode, but you can switch to the ",(0,r.yg)("inlineCode",{parentName:"p"},"key")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"update")," modes with the ",(0,r.yg)("inlineCode",{parentName:"p"},"mode")," option. This impacts which the presence and requiredness of attributes:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"type ValidKey = ValidValue<\n  typeof pokemonSchema,\n  { mode: 'key' }\n>\ntype ValidUpdate = ValidValue<\n  typeof pokemonSchema,\n  { mode: 'update' }\n>\n")),(0,r.yg)("admonition",{title:"Example",type:"note"},(0,r.yg)("p",{parentName:"admonition"},"Here are ",(0,r.yg)("strong",{parentName:"p"},"step-by-step")," examples:"),(0,r.yg)("details",{className:"details-in-admonition"},(0,r.yg)("summary",null,"\u261d\ufe0f ",(0,r.yg)("b",null,"Schema")),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const now = () => new Date().toISOString()\n\nconst pokemonSchema = schema({\n  // key attributes\n  pokemonClass: string()\n    .key()\n    .transform(prefix('POKEMON'))\n    .savedAs('partitionKey'),\n  pokemonId: string().key().savedAs('sortKey'),\n\n  // timestamps\n  created: string().default(now),\n  updated: string()\n    .required('always')\n    .putDefault(now)\n    .updateDefault(now),\n\n  // other attributes\n  name: string().optional(),\n  level: number().default(1)\n}).and(prevSchema => ({\n  levelPlusOne: number().link<typeof prevSchema>(\n    ({ level }) => level + 1\n  )\n}))\n"))),(0,r.yg)("details",{className:"details-in-admonition"},(0,r.yg)("summary",null,"\ud83d\udd0e ",(0,r.yg)("b",null,(0,r.yg)("code",null,"'put'")," mode")),(0,r.yg)(o.A,{mdxType:"Tabs"},(0,r.yg)(l.A,{value:"input",label:"InputValue",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'{\n  "pokemonClass": "pikachu",\n  "pokemonId": "123",\n  "name": "Pikachu"\n}\n'))),(0,r.yg)(l.A,{value:"valid",label:"ValidValue",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'{\n  "pokemonClass": "pikachu",\n  "pokemonId": "123",\n+ "created": "2022-01-01T00:00:00.000Z",\n+ "modified": "2022-01-01T00:00:00.000Z",\n  "name": "Pikachu",\n+ "level": 1,\n+ "levelPlusOne": 2,\n}\n'))),(0,r.yg)(l.A,{value:"transformed",label:"TransformedValue",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'{\n- "pokemonClass": "pikachu",\n+ "partitionKey": "POKEMON#pikachu",\n- "pokemonId": "123",\n+ "sortKey": "123",\n  "created": "2022-01-01T00:00:00.000Z",\n  "modified": "2022-01-01T00:00:00.000Z",\n  "name": "Pikachu",\n  "level": 1,\n  "levelPlusOne": 2,\n}\n'))))),(0,r.yg)("details",{className:"details-in-admonition"},(0,r.yg)("summary",null,"\ud83d\udd0e ",(0,r.yg)("b",null,(0,r.yg)("code",null,"'key'")," mode")),(0,r.yg)(o.A,{mdxType:"Tabs"},(0,r.yg)(l.A,{value:"input",label:"InputValue",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'{\n  "pokemonClass": "pikachu",\n  "pokemonId": "123",\n}\n+ (Only key attributes are required)\n'))),(0,r.yg)(l.A,{value:"valid",label:"ValidValue",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'{\n  "pokemonClass": "pikachu",\n  "pokemonId": "123",\n}\n'))),(0,r.yg)(l.A,{value:"transformed",label:"TransformedValue",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'{\n- "pokemonClass": "pikachu",\n+ "partitionKey": "POKEMON#pikachu",\n- "pokemonId": "123",\n+ "sortKey": "123",\n}\n'))))),(0,r.yg)("details",{className:"details-in-admonition"},(0,r.yg)("summary",null,"\ud83d\udd0e ",(0,r.yg)("b",null,(0,r.yg)("code",null,"'update'")," mode")),(0,r.yg)(o.A,{mdxType:"Tabs"},(0,r.yg)(l.A,{value:"input",label:"InputValue",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'{\n  "pokemonClass": "bulbasaur",\n  "pokemonId": "123",\n  "name": "PlantyDino",\n}\n'))),(0,r.yg)(l.A,{value:"valid",label:"ValidValue",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'{\n  "pokemonClass": "bulbasaur",\n  "pokemonId": "123",\n+ "modified": "2022-01-01T00:00:00.000Z",\n  "name": "PlantyDino",\n}\n'))),(0,r.yg)(l.A,{value:"transformed",label:"TransformedValue",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'{\n- "pokemonClass": "bulbasaur",\n+ "partitionKey": "POKEMON#bulbasaur",\n- "pokemonId": "123",\n+ "sortKey": "123",\n  "modified": "2022-01-01T00:00:00.000Z",\n  "name": "PlantyDino",\n}\n')))))),(0,r.yg)("h2",{id:"reads"},"Reads"),(0,r.yg)("p",null,"DynamoDB-Toolbox exposes the ",(0,r.yg)("inlineCode",{parentName:"p"},"FormattedValue")," generic type which is similar to ",(0,r.yg)("inlineCode",{parentName:"p"},"ValidValue"),", except that ",(0,r.yg)("inlineCode",{parentName:"p"},"hidden")," fields are omitted:"),(0,r.yg)("mermaid",{value:'flowchart RL\n  classDef mmddescription fill:none,stroke:none\n  classDef mmdcontainer fill:#eee4,stroke-width:1px,stroke-dasharray:3,stroke:#ccc,font-weight:bold,font-size:large\n  classDef mmdspace fill:none,stroke:none,color:#0000\n\n  SavedItem["<b>SavedItem</b>"]\n\n  subgraph Formatting[ ]\n    FormattingDescription["<b>Format</b>"]:::mmddescription\n  end\n  Formatting:::mmdcontainer\n\n  FormattedValue["<b>FormattedValue</b>"]\n\n  SavedItem.-FormattingDescription\n  FormattingDescription.->FormattedValue\n\n  space1( ):::mmdspace\n\n  FormattedValue ~~~~~~ space1\n'}),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import type { FormattedValue } from 'dynamodb-toolbox/entity'\n\ntype Formatted = FormattedValue<typeof PokemonEntity>\n")))}y.isMDXComponent=!0}}]);