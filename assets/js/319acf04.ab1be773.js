"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3378],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>y});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),i=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=i(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=i(t),p=r,y=m["".concat(s,".").concat(p)]||m[p]||d[p]||l;return t?a.createElement(y,o(o({ref:n},c),{},{components:t})):a.createElement(y,o({ref:n},c))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=p;var u={};for(var s in n)hasOwnProperty.call(n,s)&&(u[s]=n[s]);u.originalType=e,u[m]="string"==typeof e?e:r,o[1]=u;for(var i=2;i<l;i++)o[i]=t[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(96540),r=t(20053);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:n,hidden:t,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,o),hidden:t},n)}},11470:(e,n,t)=>{t.d(n,{A:()=>S});var a=t(58168),r=t(96540),l=t(20053),o=t(23104),u=t(56347),s=t(57485),i=t(31682),c=t(89466);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function d(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??m(t);return function(e){const n=(0,i.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function y(e){let{queryString:n=!1,groupId:t}=e;const a=(0,u.W6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(a.location.search);n.set(l,e),a.replace({...a.location,search:n.toString()})}),[l,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,l=d(e),[o,u]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:l}))),[s,i]=y({queryString:t,groupId:a}),[m,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,l]=(0,c.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:a}),b=(()=>{const e=s??m;return p({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{b&&u(b)}),[b]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);u(e),i(e),g(e)}),[i,g,l]),tabValues:l}}var b=t(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:n,block:t,selectedValue:u,selectValue:s,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,o.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),a=i[t].value;a!==u&&(m(n),s(a))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},n)},i.map((e=>{let{value:n,label:t,attributes:o}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:u===n?0:-1,"aria-selected":u===n,key:n,ref:e=>c.push(e),onKeyDown:p,onClick:d},o,{className:(0,l.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":u===n})}),t??n)})))}function v(e){let{lazy:n,children:t,selectedValue:a}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function N(e){const n=g(e);return r.createElement("div",{className:(0,l.A)("tabs-container",f.tabList)},r.createElement(h,(0,a.A)({},e,n)),r.createElement(v,(0,a.A)({},e,n)))}function S(e){const n=(0,b.A)();return r.createElement(N,(0,a.A)({key:String(n)},e))}},96626:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>u,metadata:()=>i,toc:()=>m});var a=t(58168),r=(t(96540),t(15680)),l=t(11470),o=t(19365);const u={title:"number",sidebar_custom_props:{code:!0}},s="Number",i={unversionedId:"schemas/number/index",id:"schemas/number/index",title:"number",description:"Defines a number attribute:",source:"@site/docs/4-schemas/9-number/index.md",sourceDirName:"4-schemas/9-number",slug:"/schemas/number/",permalink:"/docs/schemas/number/",draft:!1,tags:[],version:"current",frontMatter:{title:"number",sidebar_custom_props:{code:!0}},sidebar:"tutorialSidebar",previous:{title:"boolean",permalink:"/docs/schemas/boolean/"},next:{title:"string",permalink:"/docs/schemas/string/"}},c={},m=[{value:"Options",id:"options",level:2},{value:"<code>.required()</code>",id:"required",level:3},{value:"<code>.hidden()</code>",id:"hidden",level:3},{value:"<code>.key()</code>",id:"key",level:3},{value:"<code>.savedAs(...)</code>",id:"savedas",level:3},{value:"<code>.enum(...)</code>",id:"enum",level:3},{value:"<code>.transform(...)</code>",id:"transform",level:3},{value:"<code>.big()</code>",id:"big",level:3},{value:"<code>.default(...)</code>",id:"default",level:3},{value:"<code>.link&lt;Schema&gt;(...)</code>",id:"linkschema",level:3},{value:"<code>.validate(...)</code>",id:"validate",level:3}],d={toc:m},p="wrapper";function y(e){let{components:n,...t}=e;return(0,r.yg)(p,(0,a.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"number"},"Number"),(0,r.yg)("p",null,"Defines a ",(0,r.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes"},(0,r.yg)("strong",{parentName:"a"},"number attribute")),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import { number } from 'dynamodb-toolbox/attributes/number';\n\nconst pokemonSchema = schema({\n  ...\n  level: number(),\n});\n\ntype FormattedPokemon = FormattedItem<typeof PokemonEntity>;\n// => {\n//   ...\n//   level: number\n// }\n")),(0,r.yg)("h2",{id:"options"},"Options"),(0,r.yg)("h3",{id:"required"},(0,r.yg)("inlineCode",{parentName:"h3"},".required()")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,(0,r.yg)("code",null,"string | undefined"))),(0,r.yg)("p",null,"Tags the attribute as ",(0,r.yg)("strong",{parentName:"p"},"required")," (at root level or within ",(0,r.yg)("a",{parentName:"p",href:"/docs/schemas/map/"},"Maps"),"). Possible values are:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("code",null,"'atLeastOnce' ",(0,r.yg)("i",null,"(default)")),": Required (starting value)"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"'always'"),": Always required (including updates)"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"'never'"),": Optional")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"// Equivalent\nconst levelSchema = number()\nconst levelSchema = number().required()\nconst levelSchema = number({ required: 'atLeastOnce' })\n\n// shorthand for `.required('never')`\nconst levelSchema = number().optional()\nconst levelSchema = number({ required: 'never' })\n")),(0,r.yg)("h3",{id:"hidden"},(0,r.yg)("inlineCode",{parentName:"h3"},".hidden()")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,(0,r.yg)("code",null,"boolean | undefined"))),(0,r.yg)("p",null,"Skips the attribute when formatting items:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const levelSchema = number().hidden()\nconst levelSchema = number({ hidden: true })\n")),(0,r.yg)("h3",{id:"key"},(0,r.yg)("inlineCode",{parentName:"h3"},".key()")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,(0,r.yg)("code",null,"boolean | undefined"))),(0,r.yg)("p",null,"Tags the attribute as needed to compute the primary key:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"// Note: The method also sets the `required` property to 'always'\n// (it is often the case in practice, you can still use `.optional()` if needed)\nconst levelSchema = number().key()\nconst levelSchema = number({\n  key: true,\n  required: 'always'\n})\n")),(0,r.yg)("h3",{id:"savedas"},(0,r.yg)("inlineCode",{parentName:"h3"},".savedAs(...)")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,(0,r.yg)("code",null,"string"))),(0,r.yg)("p",null,"Renames the attribute during the ",(0,r.yg)("a",{parentName:"p",href:"/docs/schemas/actions/parse"},"transformation step")," (at root level or within ",(0,r.yg)("a",{parentName:"p",href:"/docs/schemas/map/"},"Maps"),"):"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const levelSchema = number().savedAs('lvl')\nconst levelSchema = number({ savedAs: 'lvl' })\n")),(0,r.yg)("h3",{id:"enum"},(0,r.yg)("inlineCode",{parentName:"h3"},".enum(...)")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,(0,r.yg)("code",null,"number[]"))),(0,r.yg)("p",null,"Provides a finite range of possible values:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const pokemonGenerationSchema = number().enum(1, 2, 3)\n\n// \ud83d\udc47 Equivalent to `.enum(1).default(1)`\nconst pokemonGenerationSchema = number().const(1)\n")),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"For type inference reasons, the ",(0,r.yg)("inlineCode",{parentName:"p"},"enum")," option is only available as a method and not as a constructor property.")),(0,r.yg)("h3",{id:"transform"},(0,r.yg)("inlineCode",{parentName:"h3"},".transform(...)")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,(0,r.yg)("code",null,"Transformer<number>"))),(0,r.yg)("p",null,"Allows modifying the attribute values during the ",(0,r.yg)("a",{parentName:"p",href:"/docs/schemas/actions/parse"},"transformation step"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const addOne = {\n  parse: (input: number) => input + 1,\n  format: (saved: number) => saved - 1\n}\n\n// Saves the value plus one\nconst levelSchema = number().transform(addOne)\nconst levelSchema = number({ transform: addOne })\n")),(0,r.yg)("p",null,"DynamoDB-Toolbox exposes ",(0,r.yg)("a",{parentName:"p",href:"/docs/schemas/transformers/usage"},"on-the-shelf transformers"),", so feel free to use them!"),(0,r.yg)("h3",{id:"big"},(0,r.yg)("inlineCode",{parentName:"h3"},".big()")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,(0,r.yg)("code",null,"boolean | undefined"))),(0,r.yg)("p",null,"Allows ",(0,r.yg)("inlineCode",{parentName:"p"},"BigInt")," values:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const levelSchema = number().big()\nconst levelSchema = number({ big: true })\n\ntype FormattedPokemon = FormattedItem<typeof PokemonEntity>\n// => {\n//   ...\n//   level: number | bigint\n// }\n")),(0,r.yg)("h3",{id:"default"},(0,r.yg)("inlineCode",{parentName:"h3"},".default(...)")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,(0,r.yg)("code",null,"ValueOrGetter<number>"))),(0,r.yg)("p",null,"Specifies default values for the attribute. See ",(0,r.yg)("a",{parentName:"p",href:"/docs/schemas/defaults-and-links/"},"Defaults and Links")," for more details:"),(0,r.yg)("admonition",{title:"Examples",type:"note"},(0,r.yg)(l.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"put",label:"Put",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const levelSchema = number().default(42)\n// \ud83d\udc47 Similar to\nconst levelSchema = number().putDefault(42)\n// \ud83d\udc47 ...or\nconst levelSchema = number({\n  defaults: {\n    key: undefined,\n    put: 42,\n    update: undefined\n  }\n})\n\n// \ud83d\ude4c Getters also work!\nconst levelSchema = number().default(() => 42)\n"))),(0,r.yg)(o.A,{value:"key",label:"Key",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const levelSchema = number().key().default(42)\n// \ud83d\udc47 Similar to\nconst levelSchema = number().key().keyDefault(42)\n// \ud83d\udc47 ...or\nconst levelSchema = number({\n  defaults: {\n    key: 42,\n    // put & update defaults are not useful in `key` attributes\n    put: undefined,\n    update: undefined\n  },\n  key: true,\n  required: 'always'\n})\n"))),(0,r.yg)(o.A,{value:"update",label:"Update",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const updateCountSchema = number()\n  // adds 1 to the attribute at each update\n  .updateDefault(() => $add(1))\n\n// \ud83d\udc47 Similar to\nconst updateCountSchema = number({\n  defaults: {\n    key: undefined,\n    put: undefined,\n    update: () => $add(1)\n  }\n})\n"))))),(0,r.yg)("h3",{id:"linkschema"},(0,r.yg)("inlineCode",{parentName:"h3"},".link<Schema>(...)")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,(0,r.yg)("code",null,"Link<SCHEMA, number>"))),(0,r.yg)("p",null,"Similar to ",(0,r.yg)("a",{parentName:"p",href:"#default"},(0,r.yg)("inlineCode",{parentName:"a"},".default(...)"))," but allows deriving the default value from other attributes. See ",(0,r.yg)("a",{parentName:"p",href:"/docs/schemas/defaults-and-links/"},"Defaults and Links")," for more details:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const pokemonSchema = schema({\n  level: number()\n}).and(prevSchema => ({\n  captureLevel: number().link<typeof prevSchema>(\n    // \ud83d\ude4c Correctly typed!\n    item => item.level\n  )\n}))\n")),(0,r.yg)("h3",{id:"validate"},(0,r.yg)("inlineCode",{parentName:"h3"},".validate(...)")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,(0,r.yg)("code",null,"Validator<number>"))),(0,r.yg)("p",null,"Adds custom validation to the attribute. See ",(0,r.yg)("a",{parentName:"p",href:"/docs/schemas/custom-validation/"},"Custom Validation")," for more details:"),(0,r.yg)("admonition",{title:"Examples",type:"note"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const integerSchema = number().validate(input =>\n  Number.isInteger(input)\n)\n// \ud83d\udc47 Similar to\nconst integerSchema = number().putValidate(input =>\n  Number.isInteger(input)\n)\n// \ud83d\udc47 ...or\nconst integerSchema = number({\n  validators: {\n    key: undefined,\n    put: input => Number.isInteger(input),\n    update: undefined\n  }\n})\n"))))}y.isMDXComponent=!0}}]);