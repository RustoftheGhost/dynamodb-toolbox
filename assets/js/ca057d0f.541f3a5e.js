"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9765],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,k=d["".concat(s,".").concat(c)]||d[c]||m[c]||i;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},25764:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={title:"Defaults & Links"},l="Defaults & Links",o={unversionedId:"schemas/defaults-and-links/index",id:"schemas/defaults-and-links/index",title:"Defaults & Links",description:"Defaults",source:"@site/docs/4-schemas/3-defaults-and-links/index.md",sourceDirName:"4-schemas/3-defaults-and-links",slug:"/schemas/defaults-and-links/",permalink:"/docs/schemas/defaults-and-links/",draft:!1,tags:[],version:"current",frontMatter:{title:"Defaults & Links"},sidebar:"tutorialSidebar",previous:{title:"Warm vs Frozen",permalink:"/docs/schemas/warm-vs-frozen/"},next:{title:"any",permalink:"/docs/schemas/any/"}},s={},p=[{value:"Defaults",id:"defaults",level:2},{value:"Links",id:"links",level:2}],u={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"defaults--links"},"Defaults & Links"),(0,r.kt)("h2",{id:"defaults"},"Defaults"),(0,r.kt)("p",null,"All attribute types support providing default values. There are three kinds of defaults:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"putDefault"),": Applied on put actions (e.g. ",(0,r.kt)("a",{parentName:"li",href:"/docs/entities/actions/put-item/"},(0,r.kt)("inlineCode",{parentName:"a"},"PutItemCommand")),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"updateDefault"),": Applied on update actions (e.g. ",(0,r.kt)("a",{parentName:"li",href:"/docs/entities/actions/update-item/"},(0,r.kt)("inlineCode",{parentName:"a"},"UpdateItemCommand")),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyDefault"),": Overrides other defaults on key attributes (ignored otherwise)")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," method is a shorthand that acts as ",(0,r.kt)("inlineCode",{parentName:"p"},"keyDefault")," on key attributes and ",(0,r.kt)("inlineCode",{parentName:"p"},"putDefault")," otherwise."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"\u261d\ufe0f In order for the ",(0,r.kt)("inlineCode",{parentName:"p"},".default(...)")," shorthand to work properly on key attributes, make sure to use it ",(0,r.kt)("strong",{parentName:"p"},"after")," calling ",(0,r.kt)("inlineCode",{parentName:"p"},".key()"),".")),(0,r.kt)("p",null,"Here are some simple examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const nameSchema = string().default('Pikachu')\n\n// \ud83d\ude4c Getters also work!\nconst createdSchema = string().default(() =>\n  new Date().toISOString()\n)\n\nconst updatesCountSchema = number()\n  .putDefault(1)\n  .updateDefault(() => $add(1))\n")),(0,r.kt)("h2",{id:"links"},"Links"),(0,r.kt)("p",null,"In DynamoDB, it is frequent to ",(0,r.kt)("strong",{parentName:"p"},"infer attribute values from other attributes")," (e.g. for secondary indexes). In DynamoDB-Toolbox, this is called ",(0,r.kt)("em",{parentName:"p"},"linking")," attributes."),(0,r.kt)("p",null,"In TypeScript, the difficulty is that it's ",(0,r.kt)("strong",{parentName:"p"},"impossible")," to pass the shape of the parent schema to the ",(0,r.kt)("inlineCode",{parentName:"p"},".default")," method, and thus efficiently type the link arguments:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const pokemonSchema = schema({\n  ...\n  level: number(),\n  levelPlusOne: number().default(\n    // \u274c Cannot infer the type\n    input => input.level + 1\n  )\n})\n")),(0,r.kt)("p",null,"The solution is to make good use of the ",(0,r.kt)("inlineCode",{parentName:"p"},".and(...)")," method (see ",(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/warm-vs-frozen/#extension"},"Extending Schemas"),") and build the schema ",(0,r.kt)("strong",{parentName:"p"},"in two steps"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const pokemonSchema = schema({\n  ...\n  level: number()\n}).and(prevSchema => ({\n  levelPlusOne: number().link<typeof prevSchema>(\n    // \ud83d\ude4c Correctly typed!\n    ({ level }) => level + 1\n  )\n}))\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"This is only required if you need type inference. In vanilla JS, ",(0,r.kt)("inlineCode",{parentName:"p"},"links")," can be used directly in the original schema.")),(0,r.kt)("p",null,"Similarly to defaults, links come in three flavors:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"putLink"),": Applied on put actions (e.g. ",(0,r.kt)("a",{parentName:"li",href:"/docs/entities/actions/put-item/"},(0,r.kt)("inlineCode",{parentName:"a"},"PutItemCommand")),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"updateLink"),": Applied on update actions (e.g. ",(0,r.kt)("a",{parentName:"li",href:"/docs/entities/actions/update-item/"},(0,r.kt)("inlineCode",{parentName:"a"},"UpdateItemCommand")),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyLink"),": Overrides other links on key attributes (ignored otherwise)")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"link")," method is a shorthand that acts as ",(0,r.kt)("inlineCode",{parentName:"p"},"keyLink")," on key attributes and ",(0,r.kt)("inlineCode",{parentName:"p"},"putLink")," otherwise."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"\u261d\ufe0f In order for the ",(0,r.kt)("inlineCode",{parentName:"p"},".link(...)")," shorthand to work properly on key attributes, make sure to use it ",(0,r.kt)("strong",{parentName:"p"},"after")," calling ",(0,r.kt)("inlineCode",{parentName:"p"},".key()"),".")),(0,r.kt)("p",null,"Note that ",(0,r.kt)("strong",{parentName:"p"},"defaults are computed before links"),", so you can safely use defaults within links (see the ",(0,r.kt)("a",{parentName:"p",href:"/docs/schemas/actions/parse"},(0,r.kt)("inlineCode",{parentName:"a"},"Parser"))," action for more details)."))}m.isMDXComponent=!0}}]);