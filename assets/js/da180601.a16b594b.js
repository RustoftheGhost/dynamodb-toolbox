"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5850],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=m(n),p=r,y=c["".concat(s,".").concat(p)]||c[p]||d[p]||o;return n?a.createElement(y,i(i({ref:t},u),{},{components:n})):a.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},19365:(e,t,n)=>{n.d(t,{A:()=>i});var a=n(96540),r=n(20053);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,i),hidden:n},t)}},11470:(e,t,n)=>{n.d(t,{A:()=>k});var a=n(58168),r=n(96540),o=n(20053),i=n(23104),l=n(56347),s=n(57485),m=n(31682),u=n(89466);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,m.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.W6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,m]=y({queryString:n,groupId:a}),[c,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),g=(()=>{const e=s??c;return p({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),m(e),f(e)}),[m,f,o]),tabValues:o}}var g=n(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:m}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=m[n].value;a!==l&&(c(t),s(a))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t)},m.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:p,onClick:d},i,{className:(0,o.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":l===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=f(e);return r.createElement("div",{className:(0,o.A)("tabs-container",b.tabList)},r.createElement(h,(0,a.A)({},e,t)),r.createElement(v,(0,a.A)({},e,t)))}function k(e){const t=(0,g.A)();return r.createElement(N,(0,a.A)({key:String(t)},e))}},14419:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>y,frontMatter:()=>l,metadata:()=>m,toc:()=>c});var a=n(58168),r=(n(96540),n(15680)),o=n(11470),i=n(19365);const l={title:"Format",sidebar_custom_props:{sidebarActionType:"util"}},s="EntityFormatter",m={unversionedId:"entities/actions/format/index",id:"entities/actions/format/index",title:"Format",description:"Given a saved item, validates that it respects the schema of the Entity, applies transformations backward and hide hidden attributes:",source:"@site/docs/3-entities/4-actions/20-format/index.md",sourceDirName:"3-entities/4-actions/20-format",slug:"/entities/actions/format/",permalink:"/docs/entities/actions/format/",draft:!1,tags:[],version:"current",frontMatter:{title:"Format",sidebar_custom_props:{sidebarActionType:"util"}},sidebar:"tutorialSidebar",previous:{title:"ParsePaths",permalink:"/docs/entities/actions/parse-paths/"},next:{title:"Spy",permalink:"/docs/entities/actions/spy/"}},u={},c=[{value:"Methods",id:"methods",level:2},{value:"<code>format(...)</code>",id:"format",level:3}],d={toc:c},p="wrapper";function y(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"entityformatter"},"EntityFormatter"),(0,r.yg)("p",null,"Given a saved item, validates that it respects the schema of the ",(0,r.yg)("inlineCode",{parentName:"p"},"Entity"),", applies transformations backward and hide hidden attributes:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import { EntityFormatter } from 'dynamodb-toolbox/entity/actions/format'\n\nconst formattedPikachu =\n  PokemonEntity.build(EntityFormatter).format(savedPikachu)\n")),(0,r.yg)("p",null,"In DynamoDB-Toolbox, formatting is done in ",(0,r.yg)("strong",{parentName:"p"},"2 steps"),":"),(0,r.yg)("mermaid",{value:"flowchart RL\n  classDef mmddescription fill:none,stroke:none,font-style:italic\n  classDef mmdcontainer fill:#eee4,stroke-width:1px,stroke-dasharray:3,stroke:#ccc,font-weight:bold,font-size:large\n  classDef mmdspace fill:none,stroke:none,color:#0000\n\n  transformed(Transformed')\n  transformed:::mmddescription\n\n  subgraph Transforming\n    space1( ):::mmdspace\n\n    transform(<b>Transforms</b> backward)\n    transformDescr(...<b>renames</b> and<br/><b>transforms</b> back.):::mmddescription\n  end\n\n  transformed .-> transform\n\n  Transforming:::mmdcontainer\n\n  subgraph Formatting\n    space2( ):::mmdspace\n\n    format(<b>Formats</b> the item)\n    formatDescr(...<b>omits</b> hidden attributes.):::mmddescription\n\n    transform----\x3eformat\n  end\n\n  Formatting:::mmdcontainer\n\n  formatted(Formatted')\n  formatted:::mmddescription\n\n  format .-> formatted"}),(0,r.yg)("p",null,"Note that:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Additional and ",(0,r.yg)("inlineCode",{parentName:"li"},"hidden")," fields are omitted, but inputs are not mutated"),(0,r.yg)("li",{parentName:"ul"},"The formatting throws an error if the saved item is invalid"),(0,r.yg)("li",{parentName:"ul"},"Transformations (i.e. ",(0,r.yg)("inlineCode",{parentName:"li"},"savedAs")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"transforms"),") are applied backward")),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"This action is mostly a ",(0,r.yg)("strong",{parentName:"p"},"wrapper around the schema ",(0,r.yg)("a",{parentName:"strong",href:"/docs/schemas/actions/format"},(0,r.yg)("inlineCode",{parentName:"a"},"Formatter"))," action"),", so we highly recommend you read its dedicated documentation first.")),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"format"},(0,r.yg)("inlineCode",{parentName:"h3"},"format(...)")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,(0,r.yg)("code",null,"(savedItem: unknown, options?: FormatItemOptions) => FormattedItem<ENTITY>"))),(0,r.yg)("p",null,"Formats a saved item:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const formattedItem = PokemonEntity.build(EntityFormatter).format(savedItem)\n")),(0,r.yg)("p",null,"You can provide ",(0,r.yg)("strong",{parentName:"p"},"formatting options")," as a second argument. Available options:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Option"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"transform")),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("inlineCode",{parentName:"td"},"boolean")),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("inlineCode",{parentName:"td"},"true")),(0,r.yg)("td",{parentName:"tr",align:null},"Whether to transform back the input (with ",(0,r.yg)("inlineCode",{parentName:"td"},"savedAs")," and ",(0,r.yg)("inlineCode",{parentName:"td"},"transform"),") prior to formatting or not.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"partial")),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("inlineCode",{parentName:"td"},"boolean")),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("inlineCode",{parentName:"td"},"false")),(0,r.yg)("td",{parentName:"tr",align:null},"Allow every attribute (flat or deep) to be optional while formatting.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"attributes")),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("inlineCode",{parentName:"td"},"Path<Entity>[]")),(0,r.yg)("td",{parentName:"tr",align:"center"},"-"),(0,r.yg)("td",{parentName:"tr",align:null},"To specify a list of attributes to format (other attributes are omitted).",(0,r.yg)("br",null),(0,r.yg)("br",null),"See the ",(0,r.yg)("a",{parentName:"td",href:"/docs/entities/actions/parse-paths/#paths"},(0,r.yg)("inlineCode",{parentName:"a"},"PathParser"))," action for more details on how to write attribute paths.")))),(0,r.yg)("admonition",{title:"Examples",type:"note"},(0,r.yg)(o.A,{mdxType:"Tabs"},(0,r.yg)(i.A,{value:"partial",label:"Partial",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const saved = {\n  pokemonId: 'pikachu1',\n  name: 'Pikachu',\n  ...\n}\n\n// \ud83d\ude4c Typed as `DeepPartial<Pokemon>`\nconst formatted = PokemonEntity\n  .build(EntityFormatter)\n  .format(saved, { partial: true })\n"))),(0,r.yg)(i.A,{value:"attributes",label:"Attributes",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const saved = {\n  pokemonId: 'pikachu1',\n  name: 'Pikachu',\n  level: 42,\n  ...\n}\n\n// \ud83d\ude4c Typed as `Pick<Pokemon, 'name' | 'level'>`\nconst formatted = PokemonEntity\n  .build(EntityFormatter)\n  .format(saved, { attributes: ['name', 'level'] })\n"))),(0,r.yg)(i.A,{value:"formatting-only",label:"Formatting only",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"// \ud83d\udc47 Not transformed\nconst valid = {\n  pokemonId: 'pikachu1',\n  name: 'Pikachu',\n  level: 42,\n  ...\n}\n\n// \ud83d\udc47 Simply omits hidden attributes\nconst formatted = PokemonEntity\n  .build(EntityFormatter)\n  .format(valid, { transform: false })\n"))))),(0,r.yg)("p",null,"You can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"FormattedItem")," type to explicitly type an object as a formatting output object:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import type { FormattedItem } from 'dynamodb-toolbox/entity'\n\nconst formattedItem: FormattedItem<\n  typeof PokemonEntity,\n  // \ud83d\udc47 Optional options\n  { partial: false; attributes: 'name' | 'level' }\n  // \u274c Throws a type error\n> = { invalid: 'output' }\n")))}y.isMDXComponent=!0}}]);