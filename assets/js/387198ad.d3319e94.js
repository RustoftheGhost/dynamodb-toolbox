"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5870],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(a),d=r,h=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return a?n.createElement(h,l(l({ref:t},u),{},{components:a})):n.createElement(h,l({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(67294),r=a(86010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>C});var n=a(87462),r=a(67294),o=a(86010),l=a(12466),i=a(76775),s=a(91980),c=a(67392),u=a(50012);function m(e){return function(e){var t;return(null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function b(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=p(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[s,c]=h({queryString:a,groupId:n}),[m,b]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,u.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),k=(()=>{const e=s??m;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{k&&i(k)}),[k]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),b(e)}),[c,b,o]),tabValues:o}}var k=a(72389);const y="tabList__CuJ",f="tabItem_LNqP";function N(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.o5)(),p=e=>{const t=e.currentTarget,a=u.indexOf(t),n=c[a].value;n!==i&&(m(t),s(n))},d=e=>{var t;let a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;a=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;a=u[t]??u[u.length-1];break}}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:p},l,{className:(0,o.Z)("tabs__item",f,null==l?void 0:l.className,{"tabs__item--active":i===t})}),a??t)})))}function g(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=b(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",y)},r.createElement(N,(0,n.Z)({},e,t)),r.createElement(g,(0,n.Z)({},e,t)))}function C(e){const t=(0,k.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},9899:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var n=a(87462),r=(a(67294),a(3905)),o=a(74866),l=a(85162);const i={title:"BatchGet",sidebar_custom_props:{sidebarActionType:"read"}},s="BatchGetCommand",c={unversionedId:"tables/actions/batch-get/index",id:"tables/actions/batch-get/index",title:"BatchGet",description:"Groups one or several BatchGetRequest from the Table entities to execute a BatchGetItem operation.",source:"@site/docs/2-tables/2-actions/4-batch-get/index.md",sourceDirName:"2-tables/2-actions/4-batch-get",slug:"/tables/actions/batch-get/",permalink:"/docs/tables/actions/batch-get/",draft:!1,tags:[],version:"current",frontMatter:{title:"BatchGet",sidebar_custom_props:{sidebarActionType:"read"}},sidebar:"tutorialSidebar",previous:{title:"Batching",permalink:"/docs/tables/actions/batching/"},next:{title:"BatchWrite",permalink:"/docs/tables/actions/batch-write/"}},u={},m=[{value:"Request",id:"request",level:2},{value:"<code>.requests(...)</code>",id:"requests",level:3},{value:"<code>.options(...)</code>",id:"options",level:3},{value:"Execution",id:"execution",level:2},{value:"Options",id:"options-1",level:3},{value:"Response",id:"response",level:3}],p={toc:m};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"batchgetcommand"},"BatchGetCommand"),(0,r.kt)("p",null,"Groups one or several ",(0,r.kt)("a",{parentName:"p",href:"/docs/entities/actions/batch-get/"},(0,r.kt)("inlineCode",{parentName:"a"},"BatchGetRequest"))," from the ",(0,r.kt)("inlineCode",{parentName:"p"},"Table")," entities to execute a ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html"},"BatchGetItem")," operation."),(0,r.kt)("p",null,"BatchGetItem operations can affect ",(0,r.kt)("strong",{parentName:"p"},"multiple tables"),", so ",(0,r.kt)("inlineCode",{parentName:"p"},"BatchGetCommands")," do not have a ",(0,r.kt)("inlineCode",{parentName:"p"},".send(...)")," method. Instead, they should be performed via the dedicated ",(0,r.kt)("inlineCode",{parentName:"p"},"execute")," function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  BatchGetCommand,\n  execute\n} from 'dynamodb-toolbox/table/actions/batchGet'\nimport { BatchGetRequest } from 'dynamodb-toolbox/entity/actions/batchGet'\n\nconst pokeCmd = PokeTable.build(BatchGetCommand).requests(\n  PokemonEntity.build(BatchGetRequest).key(pikachuKey),\n  PokemonEntity.build(BatchGetRequest).key(charizardKey)\n)\n\nconst params = pokeCmd.params()\n\nconst otherCmd = OtherTable.build(BatchGetCommand).requests(\n  TrainerEntity.build(BatchGetRequest).key(ashKey)\n)\n\nconst { Responses } = await execute(pokeCmd, otherCmd)\n\n// \ud83d\ude4c Correctly typed!\nconst [[pikachu, charizard], [ash]] = Responses\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Note that batch operations are more efficient than running their equivalent commands in parallel, but ",(0,r.kt)("strong",{parentName:"p"},"do not reduce costs"),".")),(0,r.kt)("h2",{id:"request"},"Request"),(0,r.kt)("h3",{id:"requests"},(0,r.kt)("inlineCode",{parentName:"h3"},".requests(...)")),(0,r.kt)("p",{style:{marginTop:"-15px"}},(0,r.kt)("i",null,"(required)")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/entities/actions/batch-get/"},(0,r.kt)("inlineCode",{parentName:"a"},"BatchGetRequests"))," to execute."),(0,r.kt)("p",null,"Note that the requests can be provided as ",(0,r.kt)("strong",{parentName:"p"},"tuples")," or ",(0,r.kt)("strong",{parentName:"p"},"arrays")," (the output is typed accordingly):"),(0,r.kt)("admonition",{title:"Examples",type:"note"},(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"tuple",label:"Tuple",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const command = PokeTable.build(BatchGetCommand).requests(\n  PokemonEntity.build(BatchGetRequest).key(pikachuKey),\n  PokemonEntity.build(BatchGetRequest).key(charizardKey),\n  ...\n)\n"))),(0,r.kt)(l.Z,{value:"array",label:"Array",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const requests: BatchGetRequest<typeof PokemonEntity>[] = [\n  PokemonEntity.build(BatchGetRequest).key(pikachuKey),\n  PokemonEntity.build(BatchGetRequest).key(charizardKey),\n  ...\n]\n\nconst command =\n  PokeTable.build(BatchGetCommand).requests(...requests)\n"))))),(0,r.kt)("h3",{id:"options"},(0,r.kt)("inlineCode",{parentName:"h3"},".options(...)")),(0,r.kt)("p",null,"Provides additional ",(0,r.kt)("strong",{parentName:"p"},"table-level")," options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const command = PokeTable.build(BatchGetCommand).options({\n  consistent: true\n  ...\n})\n")),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"BatchGetCommandOptions")," type to explicitly type an object as a ",(0,r.kt)("inlineCode",{parentName:"p"},"BatchGetCommand")," options object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import type { BatchGetCommandOptions } from 'dynamodb-toolbox/table/actions/batchGet'\n\nconst batchGetOptions: BatchGetCommandOptions<\n  // \ud83d\udc47 Optional entities\n  [typeof PokemonEntity, typeof TrainerEntity]\n> = {\n  consistent: true,\n  ...\n}\n\nconst command = PokeTable.build(BatchGetCommand)\n  .requests(...)\n  .options(batchGetOptions)\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"It is advised to provide ",(0,r.kt)("inlineCode",{parentName:"p"},"requests")," first as they constrain the ",(0,r.kt)("inlineCode",{parentName:"p"},"options")," type.")),(0,r.kt)("p",null,"Available options (see the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html#API_BatchGetItem_RequestParameters"},"DynamoDB documentation")," for more details):"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"consistent")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"By default, read operations are ",(0,r.kt)("b",null,"eventually")," consistent (which improves performances and reduces costs).",(0,r.kt)("br",null),(0,r.kt)("br",null),"Set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," to use ",(0,r.kt)("b",null,"strongly")," consistent reads.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"attributes")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"string[]")),(0,r.kt)("td",{parentName:"tr",align:"center"},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"To specify a list of attributes to retrieve (improves performances but does not reduce costs).",(0,r.kt)("br",null),(0,r.kt)("br",null),"Requires ",(0,r.kt)("a",{parentName:"td",href:"#requests"},"requests"),". Paths must be common to all requested entities.",(0,r.kt)("br",null),(0,r.kt)("br",null),"See the ",(0,r.kt)("a",{parentName:"td",href:"/docs/entities/actions/parse-paths/#paths"},"PathParser")," action for more details on how to write attribute paths.")))),(0,r.kt)("h2",{id:"execution"},"Execution"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { execute } from 'dynamodb-toolbox/table/actions/batchGet'\n\nawait execute(...batchGetCommands)\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Only one ",(0,r.kt)("inlineCode",{parentName:"p"},"BatchGetCommand")," per Table is supported.")),(0,r.kt)("p",null,"Note that the commands can be provided as ",(0,r.kt)("strong",{parentName:"p"},"tuples")," or ",(0,r.kt)("strong",{parentName:"p"},"arrays")," (the output is typed accordingly):"),(0,r.kt)("admonition",{title:"Examples",type:"note"},(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"tuple",label:"Tuple",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"await execute(\n  PokeTable.build(BatchGetCommand).requests(...),\n  OtherTable.build(BatchGetCommand).requests(...),\n  ...\n)\n"))),(0,r.kt)(l.Z,{value:"array",label:"Array",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const commands: (\n  | BatchGetCommand<typeof PokeTable>\n  | BatchGetCommand<typeof OtherTable>\n)[] = [\n  PokeTable.build(BatchGetCommand).requests(...),\n  OtherTable.build(BatchGetCommand).requests(...)\n]\n\nawait execute(...commands)\n"))))),(0,r.kt)("h3",{id:"options-1"},"Options"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"execute")," function accepts an additional object as a first argument for ",(0,r.kt)("strong",{parentName:"p"},"operation-level")," options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"await execute(options, ...batchGetCommands)\n")),(0,r.kt)("p",null,"Available options (see the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html#API_BatchGetItem_RequestParameters"},"DynamoDB documentation")," for more details):"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"capacity")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"CapacityOption")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'"NONE"')),(0,r.kt)("td",{parentName:"tr",align:null},"Determines the level of detail about provisioned or on-demand throughput consumption that is returned in the response.",(0,r.kt)("br",null),(0,r.kt)("br",null),"Possible values are ",(0,r.kt)("inlineCode",{parentName:"td"},'"NONE"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"TOTAL"')," and ",(0,r.kt)("inlineCode",{parentName:"td"},'"INDEXES"'),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"documentClient")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"DocumentClient")),(0,r.kt)("td",{parentName:"tr",align:"center"},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"By default, the ",(0,r.kt)("inlineCode",{parentName:"td"},"documentClient")," attached to the ",(0,r.kt)("inlineCode",{parentName:"td"},"Table")," of the first ",(0,r.kt)("inlineCode",{parentName:"td"},"BatchGetCommand")," is used to execute the operation.",(0,r.kt)("br",null),(0,r.kt)("br",null),"Use this option to override this behavior.")))),(0,r.kt)("admonition",{title:"Examples",type:"note"},(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"capacity",label:"Capacity",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const { ConsumedCapacity } = await execute(\n  { capacity: 'TOTAL' },\n  ...batchGetCommands\n)\n"))),(0,r.kt)(l.Z,{value:"document-client",label:"Document client",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { DynamoDBDocumentClient } from '@aws-sdk/lib-dynamodb'\n\nconst documentClient = new DynamoDBDocumentClient(...)\n\nconst { Response } = await execute(\n  { documentClient },\n  ...batchGetCommands\n)\n"))))),(0,r.kt)("h3",{id:"response"},"Response"),(0,r.kt)("p",null,"The data is returned with the same response syntax as from the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html#API_BatchGetItem_ResponseSyntax"},"DynamoDB BatchGetItem API"),", except for the ",(0,r.kt)("inlineCode",{parentName:"p"},"Responses")," property."),(0,r.kt)("p",null,"Instead of a map of arrays indexed by table name, DynamoDB-Toolbox returns an ",(0,r.kt)("strong",{parentName:"p"},"array of arrays"),", where each sub-array contains the items of a ",(0,r.kt)("inlineCode",{parentName:"p"},"BatchGetCommand"),". Both commands and items are returned in the ",(0,r.kt)("strong",{parentName:"p"},"same order they were provided"),", and items are formatted by their respective entities."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The official documentation states that ",(0,r.kt)("em",{parentName:"p"},'"DynamoDB does not return items in any particular order"'),", but DynamoDB-Toolbox ",(0,r.kt)("strong",{parentName:"p"},"handles the re-ordering for you")," \ud83d\ude18"),(0,r.kt)("p",{parentName:"admonition"},"This format is also better for type inference, as DynamoDB-Toolbox does not statically know your table names.")))}d.isMDXComponent=!0}}]);