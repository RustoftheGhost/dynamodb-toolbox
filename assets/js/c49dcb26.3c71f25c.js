"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8774],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,y=d["".concat(l,".").concat(c)]||d[c]||m[c]||o;return n?a.createElement(y,i(i({ref:t},u),{},{components:n})):a.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},19365:(e,t,n)=>{n.d(t,{A:()=>i});var a=n(96540),r=n(20053);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,i),hidden:n},t)}},11470:(e,t,n)=>{n.d(t,{A:()=>A});var a=n(58168),r=n(96540),o=n(20053),i=n(23104),s=n(56347),l=n(57485),p=n(31682),u=n(89466);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,p.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function c(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.W6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=m(e),[i,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[l,p]=y({queryString:n,groupId:a}),[d,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),g=(()=>{const e=l??d;return c({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&s(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!c({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),b(e)}),[p,b,o]),tabValues:o}}var g=n(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:t,block:n,selectedValue:s,selectValue:l,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==s&&(d(t),l(a))},c=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:c,onClick:m},i,{className:(0,o.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":s===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=b(e);return r.createElement("div",{className:(0,o.A)("tabs-container",f.tabList)},r.createElement(h,(0,a.A)({},e,t)),r.createElement(v,(0,a.A)({},e,t)))}function A(e){const t=(0,g.A)();return r.createElement(N,(0,a.A)({key:String(t)},e))}},18142:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>y,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var a=n(58168),r=(n(96540),n(15680)),o=n(11470),i=n(19365);const s={title:"UpdateAttributes",sidebar_custom_props:{sidebarActionType:"write"}},l="UpdateAttributesCommand",p={unversionedId:"entities/actions/update-attributes/index",id:"entities/actions/update-attributes/index",title:"UpdateAttributes",description:"Performs a UpdateAttributes Operation on an entity item. Similar to UpdateItemCommand except than deep attribute updates are non-partial:",source:"@site/docs/3-entities/4-actions/4-update-attributes/index.md",sourceDirName:"3-entities/4-actions/4-update-attributes",slug:"/entities/actions/update-attributes/",permalink:"/docs/entities/actions/update-attributes/",draft:!1,tags:[],version:"current",frontMatter:{title:"UpdateAttributes",sidebar_custom_props:{sidebarActionType:"write"}},sidebar:"tutorialSidebar",previous:{title:"UpdateItem",permalink:"/docs/entities/actions/update-item/"},next:{title:"DeleteItem",permalink:"/docs/entities/actions/delete-item/"}},u={},d=[{value:"Request",id:"request",level:2},{value:"<code>.item(...)</code>",id:"item",level:3},{value:"Root attributes",id:"root-attributes",level:3},{value:"Deep attributes",id:"deep-attributes",level:3},{value:"<code>.options(...)</code>",id:"options",level:3},{value:"Response",id:"response",level:2}],m={toc:d},c="wrapper";function y(e){let{components:t,...n}=e;return(0,r.yg)(c,(0,a.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"updateattributescommand"},"UpdateAttributesCommand"),(0,r.yg)("p",null,"Performs a ",(0,r.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateAttributes.html"},"UpdateAttributes Operation")," on an entity item. Similar to ",(0,r.yg)("a",{parentName:"p",href:"/docs/entities/actions/update-item/"},(0,r.yg)("inlineCode",{parentName:"a"},"UpdateItemCommand"))," except than deep attribute updates are ",(0,r.yg)("strong",{parentName:"p"},"non-partial"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import { UpdateAttributesCommand } from 'dynamodb-toolbox/entity/actions/updateAttributes'\n\nconst updateAttributesCommand = PokemonEntity.build(\n  UpdateAttributesCommand\n)\n\nconst params = updateAttributesCommand.params()\nawait updateAttributesCommand.send()\n")),(0,r.yg)("h2",{id:"request"},"Request"),(0,r.yg)("h3",{id:"item"},(0,r.yg)("inlineCode",{parentName:"h3"},".item(...)")),(0,r.yg)("p",{style:{marginTop:"-15px"}},(0,r.yg)("i",null,"(required)")),(0,r.yg)("p",null,"The attributes to update, including the key:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import { UpdateAttributesCommand } from 'dynamodb-toolbox/entity/actions/updateAttributes'\n\nawait PokemonEntity.build(UpdateAttributesCommand)\n  .item({\n    pokemonId: 'pikachu1',\n    level: 12,\n    ...\n  })\n  .send()\n")),(0,r.yg)("p",null,"You can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"UpdateAttributesInput")," type to explicitly type an object as a ",(0,r.yg)("inlineCode",{parentName:"p"},"UpdateAttributesCommand")," item object:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import type { UpdateAttributesInput } from 'dynamodb-toolbox/entity/actions/updateAttributes'\n\nconst item: UpdateAttributesInput<typeof PokemonEntity> = {\n  pokemonId: 'pikachu1',\n  level: 12,\n  ...\n}\n\nawait PokemonEntity.build(UpdateAttributesCommand).item(item).send()\n")),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"UpdateAttributesInput")," differs from ",(0,r.yg)("a",{parentName:"p",href:"/docs/entities/actions/put-item/#item"},(0,r.yg)("inlineCode",{parentName:"a"},"PutItemInput"))," as the root attributes are ",(0,r.yg)("strong",{parentName:"p"},"partially required")," \u2013 except for ",(0,r.yg)("inlineCode",{parentName:"p"},"always")," required attributes without defaults or links \u2013 and benefit from an ",(0,r.yg)("strong",{parentName:"p"},"extended syntax")," that reflects the ",(0,r.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.UpdateExpressions.html"},"capabilities of DynamoDB"),"."),(0,r.yg)("p",null,"It also differs from ",(0,r.yg)("a",{parentName:"p",href:"/docs/entities/actions/update-item/#item"},(0,r.yg)("inlineCode",{parentName:"a"},"UpdateItemInput"))," as deep attributes (e.g. ",(0,r.yg)("inlineCode",{parentName:"p"},"lists"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"maps")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"records"),") are always completely overridden by default."),(0,r.yg)("h3",{id:"root-attributes"},"Root attributes"),(0,r.yg)("p",null,"Root attributes, wether flat or deep, benefit from the same syntax as the ",(0,r.yg)("a",{parentName:"p",href:"/docs/entities/actions/update-item/#removing-an-attribute"},(0,r.yg)("inlineCode",{parentName:"a"},"UpdateItemCommand"))," command:"),(0,r.yg)("admonition",{title:"Examples",type:"note"},(0,r.yg)(o.A,{mdxType:"Tabs"},(0,r.yg)(i.A,{value:"remove",label:"$remove",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"// \ud83d\udc47 Extended syntax is taken from `UpdateItemCommand`\nimport { $remove } from 'dynamodb-toolbox/entity/actions/update'\n\nawait PokemonEntity.build(UpdateAttributesCommand)\n  .item({\n    pokemonId: 'pikachu1',\n    // \ud83d\udc47 clear 'statusEffect' from pokemon\n    statusEffect: $remove()\n  })\n  .send()\n"))),(0,r.yg)(i.A,{value:"get",label:"$get",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import { $get } from 'dynamodb-toolbox/entity/actions/update'\n\nawait PokemonEntity.build(UpdateAttributesCommand)\n  .item({\n    ...\n    level: 42,\n    // \ud83d\udc47 fill 'previousLevel' with current 'level'\n    previousLevel: $get('level')\n  })\n  .send()\n"))),(0,r.yg)(i.A,{value:"flat-attributes",label:"Flat attributes",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"await PokemonEntity.build(UpdateAttributesCommand)\n  .item({\n    ...\n    // \ud83d\udc47 Set fields to desired values\n    isLegendary: true,\n    nextLevel: 42,\n    name: 'Pikachu',\n    binEncoded: new Uint8Array(...),\n    skills: new Set(['thunder'])\n  })\n  .send()\n"))),(0,r.yg)(i.A,{value:"numbers",label:"Numbers",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import {\n  $add,\n  $subtract,\n  $get\n} from 'dynamodb-toolbox/entity/actions/update'\n\nawait PokemonEntity.build(UpdateAttributesCommand)\n  .item({\n    ...\n    // \ud83d\udc47 lose 20 health points\n    health: $subtract($get('health'), 20),\n    // \ud83d\udc47 gain 1 level\n    level: $sum($get('level', 0), 1),\n    // ...similar to\n    level: $add(1)\n  })\n  .send()\n"))),(0,r.yg)(i.A,{value:"sets",label:"Sets",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import {\n  $add,\n  $delete\n} from 'dynamodb-toolbox/entity/actions/update'\n\nawait PokemonEntity.build(UpdateAttributesCommand)\n  .item({\n    ...\n    skills: $add(new Set(['thunder', 'dragon-tail'])),\n    types: $delete(new Set(['flight']))\n  })\n  .send()\n"))))),(0,r.yg)("h3",{id:"deep-attributes"},"Deep attributes"),(0,r.yg)("p",null,"In the case of deep attributes (e.g. ",(0,r.yg)("inlineCode",{parentName:"p"},"lists"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"maps")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"records"),"), updates are ",(0,r.yg)("strong",{parentName:"p"},"complete by default"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"// \ud83d\udc47 Complete overrides\nawait PokemonEntity.build(UpdateAttributesCommand).item({\n ...\n // Resets list\n skills: ['thunder'],\n // Removes all other map attributes\n some: {\n   deep: {\n     field: 'foo',\n     otherField: 42\n   }\n },\n // Removes all other record keys\n bestSkillByType: {\n   electric: 'thunder'\n }\n})\n")),(0,r.yg)("p",null,"Lists benefit from additional ",(0,r.yg)("inlineCode",{parentName:"p"},"$append")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"$prepend")," extensions, which can use references:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import {\n  $append,\n  $prepend\n} from 'dynamodb-toolbox/entity/actions/update'\n\nPokemonEntity.build(UpdateAttributesCommand).item({\n  ...\n  skills: $append(['thunder', 'dragon-tail']),\n  levelHistory: $append($get('level')),\n  types: $prepend(['flight']),\n})\n")),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},(0,r.yg)("inlineCode",{parentName:"p"},"$append")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"$prepend")," are ",(0,r.yg)("strong",{parentName:"p"},"upserts"),": they create a new list if the attribute is missing from the item.")),(0,r.yg)("h3",{id:"options"},(0,r.yg)("inlineCode",{parentName:"h3"},".options(...)")),(0,r.yg)("p",null,"Provides additional options:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"await PokemonEntity.build(UpdateAttributesCommand)\n  .item(...)\n  .options({\n    returnValues: 'UPDATED_OLD',\n    capacity: 'TOTAL',\n    ...\n  })\n  .send()\n")),(0,r.yg)("p",null,"The options are the same as the ",(0,r.yg)("a",{parentName:"p",href:"/docs/entities/actions/update-item/"},(0,r.yg)("inlineCode",{parentName:"a"},"UpdateItemCommand"))," action options. Check the ",(0,r.yg)("a",{parentName:"p",href:"/docs/entities/actions/update-item/#options"},"dedicated section")," for more details."),(0,r.yg)("h2",{id:"response"},"Response"),(0,r.yg)("p",null,"The data is returned using the same response syntax as the ",(0,r.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html#API_UpdateItem_ResponseElements"},"DynamoDB UpdateItem API"),", with an additional ",(0,r.yg)("inlineCode",{parentName:"p"},"ToolboxItem")," property, which allows you to retrieve the item generated by DynamoDB-Toolbox:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const { ToolboxItem: generatedPokemon } =\n  await PokemonEntity.build(UpdateAttributesCommand)\n    .item(...)\n    .send()\n\n// \ud83d\udc47 Great for auto-generated attributes\nconst modifiedTimestamp = generatedPokemon.modified\n")),(0,r.yg)("p",null,"If present, the returned attributes are formatted by the Entity."),(0,r.yg)("p",null,"You can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"UpdateAttributesResponse")," type to explicitly type an object as an ",(0,r.yg)("inlineCode",{parentName:"p"},"UpdateAttributesCommand")," response object:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"import type { UpdateAttributesResponse } from 'dynamodb-toolbox/entity/actions/updateAttributes'\n\nconst response: UpdateAttributesResponse<\n  typeof PokemonEntity,\n  // \ud83d\udc47 Optional options\n  { returnValues: 'ALL_OLD' }\n  // \ud83d\udc47 Typed as Pokemon\xa0| undefined\n> = { Attributes: ... }\n")))}y.isMDXComponent=!0}}]);