"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3848],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>u});var a=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,u=d["".concat(c,".").concat(m)]||d[m]||y[m]||r;return n?a.createElement(u,i(i({ref:t},p),{},{components:n})):a.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},82322:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>y,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=n(58168),o=(n(96540),n(15680));const r={title:"TransactDelete",sidebar_custom_props:{sidebarActionType:"delete"}},i="DeleteTransaction",s={unversionedId:"entities/actions/transact-delete/index",id:"entities/actions/transact-delete/index",title:"TransactDelete",description:"Builds a transaction to delete an entity item, to be used within TransactWriteItems operations:",source:"@site/docs/3-entities/3-actions/13-transact-delete/index.md",sourceDirName:"3-entities/3-actions/13-transact-delete",slug:"/entities/actions/transact-delete/",permalink:"/docs/entities/actions/transact-delete/",draft:!1,tags:[],version:"current",frontMatter:{title:"TransactDelete",sidebar_custom_props:{sidebarActionType:"delete"}},sidebar:"tutorialSidebar",previous:{title:"TransactUpdate",permalink:"/docs/entities/actions/transact-update/"},next:{title:"ConditionCheck",permalink:"/docs/entities/actions/condition-check/"}},c={},l=[{value:"Request",id:"request",level:2},{value:"<code>.key(...)</code>",id:"key",level:3},{value:"<code>.options(...)</code>",id:"options",level:3}],p={toc:l},d="wrapper";function y(e){let{components:t,...n}=e;return(0,o.yg)(d,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"deletetransaction"},"DeleteTransaction"),(0,o.yg)("p",null,"Builds a transaction to delete an entity item, to be used within ",(0,o.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_TransactWriteItems.html"},"TransactWriteItems operations"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"import { execute } from 'dynamodb-toolbox/entity/actions/transactWrite'\nimport { DeleteTransaction } from 'dynamodb-toolbox/entity/actions/transactDelete'\n\nconst transaction = PokemonEntity.build(DeleteTransaction)\n\nconst params = transaction.params()\nawait execute(transaction, ...otherTransactions)\n")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"DeleteTransactions")," can be executed in conjunction with ",(0,o.yg)("a",{parentName:"p",href:"/docs/entities/actions/transact-put/"},(0,o.yg)("inlineCode",{parentName:"a"},"PutTransactions")),", ",(0,o.yg)("a",{parentName:"p",href:"/docs/entities/actions/transact-update/"},(0,o.yg)("inlineCode",{parentName:"a"},"UpdateTransactions"))," and ",(0,o.yg)("a",{parentName:"p",href:"/docs/entities/actions/condition-check/"},(0,o.yg)("inlineCode",{parentName:"a"},"ConditionChecks")),"."),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"Check the ",(0,o.yg)("a",{parentName:"p",href:"/docs/entities/actions/transactions/#transactwrite"},"Transaction Documentation")," to learn more about the ",(0,o.yg)("inlineCode",{parentName:"p"},"execute")," function.")),(0,o.yg)("h2",{id:"request"},"Request"),(0,o.yg)("h3",{id:"key"},(0,o.yg)("inlineCode",{parentName:"h3"},".key(...)")),(0,o.yg)("p",{style:{marginTop:"-15px"}},(0,o.yg)("i",null,"(required)")),(0,o.yg)("p",null,"The key of the item to delete (i.e. attributes that are tagged as part of the primary key):"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"const transaction = PokemonEntity.build(\n  DeleteTransaction\n).key({ pokemonId: 'pikachu1' })\n")),(0,o.yg)("p",null,"You can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"KeyInput")," type from the ",(0,o.yg)("a",{parentName:"p",href:"/docs/entities/actions/parse/"},(0,o.yg)("inlineCode",{parentName:"a"},"EntityParser"))," action to explicitly type an object as a ",(0,o.yg)("inlineCode",{parentName:"p"},"BatchDeleteItemRequest")," key object:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"import type { KeyInput } from 'dynamodb-toolbox/entity/actions/parse'\n\nconst key: KeyInput<typeof PokemonEntity> = {\n  pokemonId: 'pikachu1'\n}\n\nconst transaction = PokemonEntity.build(\n  DeleteTransaction\n).key(key)\n")),(0,o.yg)("h3",{id:"options"},(0,o.yg)("inlineCode",{parentName:"h3"},".options(...)")),(0,o.yg)("p",null,"Provides additional options:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"const transaction = PokemonEntity.build(\n  DeleteTransaction\n)\n  .key(...)\n  .options({\n    condition: { attr: 'archived', eq: true }\n  })\n")),(0,o.yg)("p",null,"You can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"DeleteTransactionOptions")," type to explicitly type an object as a ",(0,o.yg)("inlineCode",{parentName:"p"},"DeleteTransaction")," options object:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"import type { DeleteTransactionOptions } from 'dynamodb-toolbox/entity/actions/transactDelete'\n\nconst options: DeleteTransactionOptions<\n  typeof PokemonEntity\n> = {\n  condition: { attr: 'archived', eq: true }\n}\n\nconst transaction = PokemonEntity.build(\n  DeleteTransaction\n)\n  .key(...)\n  .options(options)\n")),(0,o.yg)("p",null,"Available options (see the ",(0,o.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_TransactWriteItems.html#API_TransactWriteItems_RequestParameters"},"DynamoDB documentation")," for more details):"),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},"Option"),(0,o.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,o.yg)("th",{parentName:"tr",align:"center"},"Default"),(0,o.yg)("th",{parentName:"tr",align:null},"Description"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"condition")),(0,o.yg)("td",{parentName:"tr",align:"center"},(0,o.yg)("inlineCode",{parentName:"td"},"Condition<typeof PokemonEntity>")),(0,o.yg)("td",{parentName:"tr",align:"center"},"-"),(0,o.yg)("td",{parentName:"tr",align:null},"A condition that must be satisfied in order for the ",(0,o.yg)("inlineCode",{parentName:"td"},"DeleteTransaction")," to succeed.",(0,o.yg)("br",null),(0,o.yg)("br",null),"See the ",(0,o.yg)("a",{parentName:"td",href:"/docs/entities/actions/parse-condition/#building-conditions"},(0,o.yg)("inlineCode",{parentName:"a"},"ConditionParser"))," action for more details on how to write conditions.")))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"const transaction = PokemonEntity.build(DeleteTransaction)\n  .key({ pokemonId: 'pikachu1' })\n  .options({\n    condition: { attr: 'archived', eq: true }\n  })\n")),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"Contrary to ",(0,o.yg)("a",{parentName:"p",href:"/docs/entities/actions/delete-item/"},(0,o.yg)("inlineCode",{parentName:"a"},"DeleteItemCommands")),", delete transactions cannot return the values of the deleted items.")))}y.isMDXComponent=!0}}]);